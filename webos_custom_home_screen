#!/bin/bash
# WebOS Custom Home Screen
# WARNING! This script is provided with no warranty, use at your own risk.

set -e

############ Begin User Customizable ENV Variables
# Set WEBOS_CUSTOM_HOME_SCREEN_ENABLED=false to disable this script.
WEBOS_CUSTOM_HOME_SCREEN_ENABLED=true
TOP_SHELF_ENABLED=true
AI_BOARD_ENABLED=true
RECOMMENDED_ENABLED=true
############ END User Customizable ENV Variables. Advanced users only past this point.

# This is the directory we will mount override files from.
WORKDIR="/tmp/webos_custom_home_screen"

# These are the source files that we will copy and modify.
AI_BOARD_SOURCE="/usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/AIBoard.qml"
RECOMMENDED_SOURCE="/usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/Recommended.qml"
TOP_SHELF_SOURCE="/usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/TopShelf.qml"
APP_INTERFACES_SOURCE="/usr/palm/applications/com.webos.app.home/qml/Interfaces/AppInterfaces/AppInterfaces.qml"

check_war_enabled() {
    # This can be used to disable the script while keeping it in place. Set WEBOS_CUSTOM_HOME_SCREEN_ENABLED to false in the env variables above.
    if [ $WEBOS_CUSTOM_HOME_SCREEN_ENABLED = false ]; then
        echo "WEBOS_CUSTOM_HOME_SCREEN_ENABLED set to false, exiting."
        rm -fr $WORKDIR
        exit 1
    fi
}

check_install() {
    # Check if installed. If not do install. If installed run from install location to ensure applying user settings
    if [ ! -f "/var/lib/webosbrew/init.d/webos_custom_home_screen" ]; then
        echo "Script is not installed. Installing."
        curl -s -L https://raw.githubusercontent.com/farkmarnum/webos-custom-home-screen/main/webos_custom_home_screen > /var/lib/webosbrew/init.d/webos_custom_home_screen
        chmod +x /var/lib/webosbrew/init.d/webos_custom_home_screen
    else
    script_name1=`basename $0`
    script_path1=`dirname $0`
    script_path_with_name="$script_path1/$script_name1"
        if [ "$script_path_with_name" = "/var/lib/webosbrew/init.d/webos_custom_home_screen" ]; then
            echo "Script installed and started from right location, executing."
        else
            echo "Runnning Script from right location."
            (/var/lib/webosbrew/init.d/webos_custom_home_screen)
            exit 1
        fi
    fi
}

check_target_sums() {
    # We check sha512 sum of target files before proceeding. We will be inserting a line of code at a specific line, we do this to ensure
    # there are no unexpected results. Old versions of WebOS or updates may cause files to change, which will break this script.
    case $1 in
    "ai_board")
        AI_BOARD_SUM="986fb371dd6a8edf5a5fa8479076011c2ad0375533c8aed997cf2d50254737d34b524732d745eafff5294c37bbf5b16d57c5f03b88d547d81eb0c18beb9d01e5  /usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/AIBoard.qml"
        AI_BOARD_CHECK=$(sha512sum $AI_BOARD_SOURCE)

        if [ "$AI_BOARD_SUM" != "$AI_BOARD_CHECK" ]; then
            echo "Shasum did not match for AIBoard.qml! Script will not proceed!"
            exit 1
        fi
            echo "Checksum matched!"
        ;;
    "recommended")
        RECOMMENDED_SUM="1f41b67dc3603908c3aece24c9eae6798684f92cbc89ebd4594e0d786a90dddd9aa0c1c84b9a6142f07deb955dbbd5afbe1c6fef6ca29618267caa0920872e16  /usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/Recommended.qml"
        RECOMMENDED_CHECK=$(sha512sum $RECOMMENDED_SOURCE)

            if [ "$RECOMMENDED_SUM" != "$RECOMMENDED_CHECK" ]; then
                echo "Shasum did not match for Recommended.qml! Script will not proceed!"
                exit 1
            fi
            echo "Checksum matched!"
        ;;
    "top_shelf")
        TOP_SHELF_SUM="0d901afee02729cf10c17e0f3624dcf8041a1c19a2d0e67e360afa17f852cbfab85240f2abbf8f75308b4d5a148b654297f09328f7bae2b491858e6f53781d9d  /usr/palm/applications/com.webos.app.home/qml/UserInterfaceLayer/Containers/Main/TopShelf.qml"
        TOP_SHELF_CHECK=$(sha512sum $TOP_SHELF_SOURCE)

        if [ "$TOP_SHELF_SUM" != "$TOP_SHELF_CHECK" ]; then
            echo "Shasum did not match for TopShelf.qml! Script will not proceed!"
            exit 1
        fi
            echo "Checksum matched!"
        ;;
    *)
        echo "Attempted to check sum with unrecognized argument! Exiting."
        exit 1
        ;;
    esac
}

check_workdir() {
    # Del workimg directory and recreate it every script run.
    if [ ! -d "$WORKDIR" ]; then
        mkdir -p $WORKDIR
    fi
}

create_top_shelf_override() {
    umount "$TOP_SHELF_SOURCE" > /dev/null 2>&1 || :
    check_target_sums "top_shelf"

    # This runs if the modified file is not found.
    # Then we copy the AIBoard.qml file to our workdir.
    cp $TOP_SHELF_SOURCE "$WORKDIR/TopShelf.qml"

    # Finally we modify the file.
    sed -i '17 i return' "$WORKDIR/TopShelf.qml"
}

remove_top_shelf() {
    # First we check if the AIBoard.qml file exists on the USB. If it does not we create it.
    if [ $TOP_SHELF_ENABLED = true ]; then
        if [ ! -f "$WORKDIR/TopShelf.qml" ]; then
            echo "TopShelf override file did not exist. Creating one now."
            create_top_shelf_override
        else
            echo "TopShelf override file found at $WORKDIR/TopShelf.qml"
        fi
        # Then we mount --bind the TopShelf.qml override file. This is a non destructive action that can be reset with a reboot or umount.
        mount --bind "$WORKDIR/TopShelf.qml" "$AI_BOARD_SOURCE"
    else
        echo "TopShelf block disabled. Reverting changes"
        umount "$TOP_SHELF_SOURCE" > /dev/null 2>&1 || :
        rm -fr $WORKDIR/TopShelf.qml
    fi
}

create_app_interfaces_override() {
    umount "$APP_INTERFACES_SOURCE" > /dev/null 2>&1 || :
    # check_target_sums "app_interfaces"

    # This runs if the modified file is not found.
    # Then we copy the AIBoard.qml file to our workdir.
    cp $APP_INTERFACES_SOURCE "$WORKDIR/AppInterfaces.qml"

    # Finally we modify the file.
    sed -i '312 i console.log("HERE", item)' "$WORKDIR/AppInterfaces.qml"
}

debug_app_interfaces() {
    # First we check if the AIBoard.qml file exists on the USB. If it does not we create it.
    if [ 1 = 1 ]; then
        if [ ! -f "$WORKDIR/AppInterfaces.qml" ]; then
            echo "AppInterfaces override file did not exist. Creating one now."
            create_app_interfaces_override
        else
            echo "AppInterfaces override file found at $WORKDIR/AppInterfaces.qml"
        fi
        # Then we mount --bind the AppInterfaces.qml override file. This is a non destructive action that can be reset with a reboot or umount.
        mount --bind "$WORKDIR/AppInterfaces.qml" "$APP_INTERFACES_SOURCE"
    else
        echo "AppInterfaces block disabled. Reverting changes"
        umount "$APP_INTERFACES_SOURCE" > /dev/null 2>&1 || :
        rm -fr $WORKDIR/AppInterfaces.qml
    fi
}

create_ai_board_override() {
    #! mountpoint -q "$AI_BOARD_SOURCE" || umount "$AI_BOARD_SOURCE"
    umount "$AI_BOARD_SOURCE" > /dev/null 2>&1 || :
    check_target_sums "ai_board"
    # This runs if the modified file is not found.
    # Then we copy the AIBoard.qml file to our workdir.
    cp $AI_BOARD_SOURCE "$WORKDIR/AIBoard.qml"

    # Finally we modify the file.
    sed -i '17 i return' "$WORKDIR/AIBoard.qml"
}

remove_ai_board() {
    # First we check if the AIBoard.qml file exists on the USB. If it does not we create it.
    if [ $AI_BOARD_ENABLED = true ]; then
        if [ ! -f "$WORKDIR/AIBoard.qml" ]; then
            echo "AIBoard override file did not exist. Creating one now."
            create_ai_board_override
        else
            echo "AIBoard override file found at $WORKDIR/AIBoard.qml"
        fi
        # Then we mount --bind the AIBoard.qml override file. This is a non destructive action that can be reset with a reboot or umount.
        mount --bind "$WORKDIR/AIBoard.qml" "$AI_BOARD_SOURCE"
    else
        echo "AIBoard block disabled. Reverting changes"
        #! mountpoint -q "$AI_BOARD_SOURCE" || umount "$AI_BOARD_SOURCE"
        umount "$AI_BOARD_SOURCE" > /dev/null 2>&1 || :
        rm -fr $WORKDIR/AIBoard.qml
    fi
}

create_recommended_override() {
    #! mountpoint -q "$RECOMMENDED_SOURCE" || umount "$RECOMMENDED_SOURCE"
    umount "$RECOMMENDED_SOURCE" > /dev/null 2>&1 || :
    check_target_sums "recommended"
    # This runs if the modified file is not found.
    # Then we copy the Recommended.qml file to our workdir.
    cp $RECOMMENDED_SOURCE "$WORKDIR/Recommended.qml"

    # Finally we modify the file.
    sed -i '17 i return' "$WORKDIR/Recommended.qml"
}

remove_recommended() {
    # First we check if the Recommended.qml file exists on the USB.
    if [ $RECOMMENDED_ENABLED = true ]; then
        if [ ! -f "$WORKDIR/Recommended.qml" ]; then
            echo "Recommended override file did not exist. Creating one now."
            create_recommended_override
        else
            echo "Recommended override file found at $WORKDIR/Recommended.qml"
        fi
        # Then we mount --bind the Recommended.qml override file. This is a non destructive action that can be reset with a reboot or umount.
        mount --bind "$WORKDIR/Recommended.qml" "$RECOMMENDED_SOURCE"
    else
        echo "Recommended block disabled. Reverting changes"
        #! mountpoint -q "$RECOMMENDED_SOURCE" || umount "$RECOMMENDED_SOURCE"
        umount "$RECOMMENDED_SOURCE" > /dev/null 2>&1 || :
        rm -fr $WORKDIR/Recommended.qml
    fi


}

init() {
    pkill -f com.webos.app.home
    # Make sure WEBOS_CUSTOM_HOME_SCREEN_ENABLED is not set to false
    check_war_enabled
    # Check install
    check_install
    # This is the entrypoint for the script.
    check_workdir

    # Optional. This removes the AI Board (Top bar with 3 boxes. Includes ad, hero banner)
    remove_ai_board

    # Optional. This removes the trending section
    remove_recommended

    # Removes the whole top shelf container
    remove_top_shelf

    debug_app_interfaces

    # When we are done we kill webOS home. This forces it to restart and use our changes.
    pkill -f com.webos.app.home
}

init
